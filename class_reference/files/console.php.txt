<?php
class D5_Console
{

    /**
     * @var D5_Console_Driver
     */
    protected static $driver;


    /**
     * D5_Console_Driverクラスのインスタンスを取得します。
     * @param string    $driver     インスタンス化するドライバ名クラス名
     */
    public static function instance($driver = null)
    {
        $driver === null and ($driver = D5::config('profiler.driver'));
        self::$driver = new $driver();
    }

    /**
     *
     */
    protected static function callDriver($method, $args = array())
    {
        call_user_func_array(array(self::instance(), $method), $args);
    }


    /**
     * コンソールにlogレベルのメッセージを出力します。
     * @param mixed     $objects...     コンソールに記録するオブジェクトまたはデータ
     */
    public static function log()
    {
        return self::callDriver('log', func_get_args());
    }


    /**
     * コンソールに warningレベルのメッセージを出力します。
     * @param mixed     $objects...     コンソールに記録するオブジェクトまたはデータ
     */
    public static function warn()
    {
        return self::callDriver('warn', func_get_args());
    }


    /**
     * コンソールにerrorレベルのメッセージを出力します。
     * @param mixed     $objects...     コンソールに記録するオブジェクトまたはデータ
     */
    public static function error()
    {
        return self::callDriver('error', func_get_args());
    }


    /**
     * コンソールにdebugレベルのメッセージを出力します。
     * @param mixed     $objects...     コンソールに記録するオブジェクトまたはデータ
     */
    public static function debug()
    {
        return self::callDriver('debug', func_get_args());
    }


    /**
     * コンソールにinfoレベルのメッセージを出力します。
     * @param mixed     $objects...     コンソールに記録するオブジェクトまたはデータ
     */
    public static function info()
    {
        return self::callDriver('info', func_get_args());
    }
}

